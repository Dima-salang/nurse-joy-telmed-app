import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class AuthService {
  final db = FirebaseFirestore.instance;
  Future<String?> signIn(String email, String password) async {
    try {
      final credential = await FirebaseAuth.instance
          .signInWithEmailAndPassword(email: email, password: password);
      // get the user id generated by firebase auth
      final userID = credential.user!.uid;

      // create the doc for the new user
      await db.collection('users').doc(userID).set({
        'email': email,
        'profile_pic': '',
        'first_name': '',
        'last_name': '',
        'civil_status': '',
        'age': 0,
        'birthdate': null,
        'address': '',
        'phone_number': '',
        'role': 'user',
        'status_online': false,
      });

      await db
          .collection('users')
          .doc(userID)
          .collection('health_information')
          .doc('health_info')
          .set({
        'height': 0,
        'weight': 0,
        'blood_type': '',
        'allergies': [],
        'medications': [],
        'other_information': '',
      });
      return 'Success';
    } on FirebaseAuthException catch (e) {
      if (e.code == 'user-not-found') {
        return ('No user found for that email.');
      } else if (e.code == 'wrong-password') {
        return ('Wrong password provided for that user.');
      } else {
        return e.message;
      }
    } catch (e) {
      return e.toString();
    }
  }

  Future<String?> signUp(String email, String password) async {
    try {
      final credential = await FirebaseAuth.instance
          .createUserWithEmailAndPassword(email: email, password: password);
      return 'Success';
    } on FirebaseAuthException catch (e) {
      if (e.code == 'weak-password') {
        return ('The password provided is too weak.');
      } else if (e.code == 'email-already-in-use') {
        return ('The account already exists for that email.');
      } else {
        return e.message;
      }
    } catch (e) {
      return e.toString();
    }
  }
}
